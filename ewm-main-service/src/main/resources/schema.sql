DROP TABLE IF NOT EXISTS category, users, location, events, participation_request, compilations CASCADE;

CREATE TABLE users(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(128) NOT NULL,
    user_name VARCHAR(255) NOT NULL
);

CREATE TABLE category(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(50) NOT NULL
);

CREATE TABLE location(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat DECIMAL NOT NULL,
    lon DECIMAL NOT NULL
);

CREATE TABLE events(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(512) NOT NULL,
    category_id BIGINT NOT NULL,
    confirmed_requests BIGINT NOT NULL,
    created_on TIMESTAMP,
    description VARCHAR(1024),
    event_date TIMESTAMP NOT NULL,
    initiator_id BIGINT NOT NULL,
    location_id BIGINT,
    paid BOOLEAN NOT NULL,
    participant_limit BIGINT,
    published_on TIMESTAMP,
    request_moderation BOOLEAN,
    state VARCHAR(9) NOT NULL,
    title VARCHAR(255) NOT NULL,
    views BIGINT,
    CONSTRAINT fk_category_id FOREIGN KEY (category_id) REFERENCES category (id) ON DELETE CASCADE,
    CONSTRAINT fk_initiator_id FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_location_id FOREIGN KEY (location_id) REFERENCES location (id) ON DELETE CASCADE
);

CREATE TABLE participation_request(
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created TIMESTAMP NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(9) NOT NULL,
  CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
  CONSTRAINT fk_requester_id FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE compilations(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT NOT NULL,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(255),
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

